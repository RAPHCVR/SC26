# k8s-trajectory-app.yaml

# --- Service ---
apiVersion: v1
kind: Service
metadata:
  name: trajectory-service
  labels:
    app: trajectory-app
spec:
  type: ClusterIP
  selector:
    app: trajectory-app
  ports:
    - name: http-frontend
      protocol: TCP
      port: 80 # Le service écoute sur le port 80
      targetPort: 80 # Il cible le port 80 du conteneur frontend (Nginx)

---
# --- Backend Service ---
apiVersion: v1
kind: Service
metadata:
  name: trajectory-backend-service
  labels:
    app: trajectory-app
spec:
  type: ClusterIP # Interne au cluster, l'Ingress s'en chargera
  selector:
    app: trajectory-app
  ports:
    - name: backend-http
      protocol: TCP
      port: 5001 # Le port sur lequel ce service écoute
      targetPort: 5001 # Le port sur lequel le conteneur backend écoute

---
# --- Ingress ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trajectory-ingress
  labels:
    app: trajectory-app
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "dns-cloudflare"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3000"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx 
  tls:
    - hosts:
        - trajectorizer.raphcvr.me
      secretName: trajectorizer-raphcvr-me-tls 
  rules:
    - host: trajectorizer.raphcvr.me
      http:
        paths:
          - path: /api/trajectories # Chemin pour les appels API
            pathType: Prefix
            backend:
              service:
                name: trajectory-backend-service 
                port:
                  number: 5001 # Port du service backend
          - path: / 
            pathType: Prefix
            backend:
              service:
                name: trajectory-service # Cible le service frontend existant
                port:
                  number: 80 # Port du service frontend

---
# --- Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trajectory-deployment
  labels:
    app: trajectory-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trajectory-app
  template:
    metadata:
      labels:
        app: trajectory-app
    spec:
      containers:
        - name: trajectory-frontend
          image: registry.digitalocean.com/team-container/trajectory-frontend:latest2
          imagePullPolicy: Always
          ports:
            - containerPort: 80 # Port Nginx dans le conteneur
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"

        - name: trajectory-backend
          image: registry.digitalocean.com/team-container/trajectory-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5001 # Port Node.js dans le conteneur
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"
